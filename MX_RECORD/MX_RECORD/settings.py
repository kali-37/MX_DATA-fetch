"""
Django settings for MX_RECORD project.
Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-bzu3&)o#a=6xvmnu)%49akev0&h)^k*%whdrhd!3u9og5+!&!8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "myapp",  # our app name
    # 'django_extensions',  # for storing database of my django app using dumpdata
    "django_celery_results",  # celery is used for scheduling tasks
    "django_celery_beat",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "myapp.middleware.DisableClientSideCachingMiddleware",
]

ROOT_URLCONF = "MX_RECORD.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["myapp/templates/myapp"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "MX_RECORD.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


# --------------------------------------------------------------------------------------------------------------
# CREATING 3 DATABASES FOR USER SQL_MX WITH PASSWORD root AND 3 DATABASES MX_DATABASE1, MX_DATABASE2, MX_DATABASE3
# THEN TO USE SPECIFIC DATABASES IN MODELS USE:

# class Meta:

#         db_table = 'mytable'
#         using='MX_DATABASE2'

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "MX_DATABASE1",
        "USER": "SQL_MX",
        "PASSWORD": "root",
        "HOST": "localhost",
        "PORT": "3306",
    },
    #  'MX_DATABASE2': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'MX_DATABASE2',
    #     'USER': 'SQL_MX',
    #     'PASSWORD': 'root',
    #     'HOST': 'localhost',
    #     'PORT': '3306',
    # },    'MX_DATABASE3': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'MX_DATABASE3',
    #     'USER': 'SQL_MX',
    #     'PASSWORD': 'root',
    #     'HOST': 'localhost',
    #     'PORT': '3306',
    # },
}

# -----------------------------------------------------------------------------------------------------


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    "myapp/static",
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# ----------------------------___CELERY SETTINGS :::::::::::::

CELERY_BROKER_URL = "amqp://guest:guest@localhost:5672//"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_SERIALIZER = "json"
CELERY_TIMEZONE = "Asia/Kolkata"
CELERY_RESULT_BACKEND = "django-db"  # store results in database for celery beats .


# Celery Beat
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"
# --------------------------------------------------------------

